#!/bin/bash


# This setup script takes all the rc files stored in this .dotfiles and symlinks them to their correct location in the system. Further to this it appends the scripts folder which is aliased to ~/.local/bin/scripts to path. By doing this we are able to make use of all the scripts developed by rwxrob and can use scripts such as newx to create our own scripts which are automatically added to this location. 

set -e 


pathappend() {
  for ARG in "$@"; do
    test -d "${ARG}" || continue
    case ":${PATH}:" in
    *:${ARG}:*) continue ;;
    esac
    export PATH="${PATH:+"${PATH}:"}${ARG}"
    echo "$PATH"
  done
}

create_scripts_links() {
    
    echo "Setting Scripts variable and adding scripts to path"
	  export SCRIPTS=~/.local/bin/scripts

    test ! -d "$HOME/.local/bin" && mkdir -p "$HOME/.local/bin"
    ln -sf "$PWD/scripts" "$HOME/.local/bin/"

    echo "adding scripts to path"
    if test -e ~/.bashrc-personal; then
        echo "bashrc found"
        pathappend \
            "$SCRIPTS/"
    fi
}

git_update() {
    
# make sure we have pulled in and updated any submodules
    echo "Updating git submodules"
    git submodule init  >>/dev/null
    git submodule update >>/dev/null
    echo "Submodules Updated"
}


set_symlinks() {

    # Create symlinks.
    echo "Creating Symlinks"
    DOT=$HOME/repos/github.com/qwertimer/.dotfiles
    argc="$@"
    for arg in $argc; do
     	x=$arg
        case $x in
        -all | all)

          BASH_FOLDER=$HOME 
          echo "Adding bash to $BASH_FOLDER"
          echo "-------------------"
          ln -sf "$DOT/bash/.bashrc" "$BASH_FOLDER/.bashrc"
          ln -sf "$DOT/bash/.bashrc-common" "$BASH_FOLDER/.bashrc-common"

          echo "$DOT/bash/bashrc"
          ln -sf "$DOT/bash/.bashrc-personal" "$BASH_FOLDER/.bashrc-personal"
          ln -sf "$DOT/bash/.bash_profile" "$BASH_FOLDER/.bash_profile"     #replace with home

          DIR_FOLDER=$HOME
          echo "Adding dir colors to $DIR_FOLDER"
          echo "-------------------"
          ln -sf "$DOT/.dircolors" "$DIR_FOLDER/.dircolors"


          GIT_FOLDER=$HOME/
          echo "Adding git templates to $GIT_FOLDER"
          echo "-------------------"
          ln -sf "$DOT/git" "$GIT_FOLDER/"

          TMUX_FOLDER=$HOME
          echo "Adding TMUX to $TMUX_FOLDER"
          echo "-------------------"
          ln -sf "$DOT/tmux/tmux/tmux.conf" "$TMUX_FOLDER/.tmux.conf"


          VIM_FOLDER=$HOME/.vim/
          mkdir ~/.vim
          echo "Adding vim config to $VIM_FOLDER"
          echo "-------------------"
          ln -sf "$DOT/vim/" "$VIM_FOLDER"
          ln -sf "$DOT/vim/.vimrc" "$HOME/.vimrc"

          XMONAD_FOLDER=$HOME/
          XMOBAR_FOLDER=$HOME/.config
          mkdir ~/.config
          echo "Adding xmonad config to $XMONAD_FOLDER"
          echo "-------------------"
          ln -sf "$DOT/.xmonad/" "$XMONAD_FOLDER"

          echo "Adding xmobarrc to $XMOBAR_FOLDER"
          echo "-------------------"
          test -d "$DOT/xmobar/" || mkdir "$DOT/xmobar"
          ln -sf "$DOT/xmobar/" "$XMOBAR_FOLDER/"

        esac
    done
}

add_lynx() {
#Lynx can be installed locally with Robs configs, or using a dockerfile can help improve usability. The method here checks for a lynx program in 
echo "hello"
}

main() {
# make sure we have pulled in and updated any submodules
#Create scripts directory in .local/bin and symlink the scripts folder
    echo "Start installation of dotfiles and scripts"
    #git_update
    set_symlinks "$@"
    create_scripts_links 
    
    echo ""
    echo "##### ALL DONE"
}

# -------------------------------- completion --------------------------------
# complete -c greet greet
declare -a COMMANDS=(foo bar blah)

if [[ -n $COMP_LINE ]]; then
  for cmd in "${COMMANDS[@]}"; do
    # ${cmd:0:${#2}}  <-- looks at the cmd and takes the 0 place up to the
    # length of the command.
   [[ ${cmd:0:${#2}} = "${2,,}" ]] && echo "$cmd"    #{2,,} <-- looks at the second command and auto lower case
  done
  exit
fi

# ------------------------------ end completion ------------------------------

main "$@"
